{"version":3,"sources":["Treepic.png","components/Navigation/Navigation.js","components/HomePage/HomePage.js","components/Participants/Participants.js","components/Created/Created.js","components/Error/Error.js","components/Createpoll/Createpoll.js","components/ReadyToVote/ReadyToVote.js","components/Pollresults/Pollresults.js","components/SearchByname/SearchByname.js","components/VotePoll/VotePoll.js","components/Checkresults/Checkresults.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","react_default","a","createElement","style","display","className","onClick","this","props","clickPrev","clickNext","marginLeft","Component","HomePage","createpollrouteChange","votepollrouteChange","resultrouteChange","Participants","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nooftextbox","event","setState","value","target","arr","updateValues","i","temp","state","getParticipants","_this2","items","_loop","push","key","type","onChange","e","Created","dformat","time","Date","users","_this$props$Pollcreat","Pollcreated","pollid","username","pollname","participants","maxvotes","endtime","map","user","participant","Error","msg","message","border","borderRadius","backgroundColor","changeErrstatus","width","margin","React","Createpoll","updateusername","updatepollname","updateMaxVotes","updateEndtime","getPollDetails","length","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","data","route","ack","catch","err","error","keypresshandler","which","msg1","components_Error_Error","autoFocus","components_Participants_Participants","onKeyPress","components_Created_Created","justifyContent","textAlign","ReadyToVote","changeUservotes","Number","submitDetails","totalvotes","obj","temparr","votes","Response","alert","window","location","reload","pollDetails","Array","fill","_id","_this$state$obj","min","max","onInput","readOnly","Pollresults","Polldetails","status","_this$state$data","str","sort","b","SearchByname","polls","list","listofpolls","poll","j","alignItems","borderLeft","onepollHandler","color","VotePoll","updatename","name","updateUsername","updatePollid","searchByname","searchBynameroute","searchbynameresult","uname","id","updatenamekeyhandler","updatepollidkeyhandler","msg2","components_SearchByname_SearchByname","components_ReadyToVote_ReadyToVote","components_Pollresults_Pollresults","Checkresults","updatePollidkeyhandler","App","next","prev","components_HomePage_HomePage","components_Createpoll_Createpoll","components_VotePoll_VotePoll","components_Checkresults_Checkresults","src","Tree","alt","padding","boxShadow","marginTop","components_Navigation_Navigation","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cede586.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Treepic.dd23b895.png\";","import React,{Component} from 'react'\r\nimport './Navigation.css'\r\n\r\nclass Navigation extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{\"display\":\"flex\"}} className=\"Navigation\" >\r\n                <button onClick={this.props.clickPrev}>Previous Page</button>\r\n                <button onClick={this.props.clickNext} style={{\"marginLeft\":\"auto\"}} >Next Page</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React,{Component} from 'react'\r\nimport './HomePage.css'\r\n\r\nclass HomePage extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Homepagebuttons\">\r\n                <button onClick={this.props.createpollrouteChange} >Create a new Voting poll</button>\r\n                <button onClick={this.props.votepollrouteChange}>Vote for an existing Poll</button>\r\n                <button onClick={this.props.resultrouteChange}>Check Results!!!</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React,{Component} from 'react'\r\n\r\nclass Participants extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            value:0,\r\n            arr:[]\r\n        }\r\n    }\r\n\r\n    nooftextbox=(event)=>{\r\n        this.setState({\r\n            value:event.target.value,\r\n            arr:[]\r\n        })\r\n    }\r\n\r\n    updateValues=(i,event)=>{\r\n        let temp = this.state.arr\r\n        temp[i]=event.target.value  \r\n        this.setState({\r\n            arr:temp\r\n        },()=>{\r\n            this.props.getParticipants(this.state.arr)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let items=[]\r\n        for(let i=0;i<this.state.value;i++){\r\n            items.push(<div key={i} >\r\n                <p>Enter Participant #{i+1}(*) : </p>\r\n                <input type=\"text\" onChange={(e)=>this.updateValues(i,e)} />\r\n            </div>)\r\n        }\r\n        return(\r\n            <div>   \r\n                <p>Enter the number of Participants(*) : </p>\r\n                <input type=\"text\" onChange={this.nooftextbox} />\r\n                {items}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Participants;","import React,{Component} from 'react'\r\nimport './Created.css'\r\n\r\nclass Created extends Component{\r\n\r\n    dformat=(time)=>{\r\n        let d = new Date(time)\r\n        return d+\"\"\r\n    }\r\n\r\n    render(){\r\n        let users\r\n        let {pollid,username,pollname,participants,maxvotes,endtime}=this.props.Pollcreated\r\n        if(typeof(participants)===\"object\"){\r\n            users=participants.map((user,i)=>{\r\n                return <p key={i} ><b>Participant #{i} :</b> {user.participant}</p>\r\n            })\r\n        }\r\n        return(\r\n            <div className=\"Created\">\r\n                <p><b>Poll Id :</b> {pollid}</p>\r\n                <p><b>Created By :</b> {username}</p>\r\n                <p><b>Poll Name :</b> {pollname}</p>\r\n                <p><b>Maximum Votes One Can Apply :</b> {maxvotes}</p>\r\n                <p><b className=\"timeformat\">Voting Time will be ended by :</b> {this.dformat(endtime)}</p>\r\n                {users}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Created","import React from 'react'\r\n\r\nclass Error extends React.Component{\r\n    render(){\r\n        let msg\r\n        if(typeof(this.props.message)!=\"undefined\"){\r\n            msg=<span>Please provide your total votes that is mentioned in your maximun votes</span>\r\n        }\r\n        else{\r\n            msg=<span>Some error occured!!! Please try again with correct credentials!!!</span>\r\n        }\r\n        return(\r\n            <div style={{\"border\":\"2px solid black\",\"borderRadius\":\"10px\",\"backgroundColor\":\"#FBF1A9\"}}>\r\n                {msg}\r\n                <button onClick={this.props.changeErrstatus} style={{\"width\":\"30px\",\"marginLeft\":\"20px\",\"margin\":\"0\"}} >X</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error;","import React,{Component} from 'react'\r\nimport Participants from '../Participants/Participants'\r\nimport Created from '../Created/Created'\r\nimport Error from '../Error/Error'\r\nimport './Createpoll.css'\r\n\r\nclass Createpoll extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            username:\"\",\r\n            pollname:\"\",\r\n            participants:[],\r\n            maxvotes:\"\",\r\n            endtime:\"\",\r\n            ack:{},\r\n            route:\"CreatePoll\",\r\n            error:false         \r\n        }\r\n    }\r\n\r\n    updateusername=(event)=>{\r\n        this.setState({\r\n            username:event.target.value\r\n        })\r\n    }\r\n\r\n    updatepollname=(event)=>{\r\n        this.setState({\r\n            pollname:event.target.value\r\n        })\r\n    }\r\n\r\n    updateMaxVotes=(event)=>{\r\n        this.setState({\r\n            maxvotes:event.target.value\r\n        })\r\n    }\r\n\r\n    updateEndtime=(event)=>{\r\n        this.setState({\r\n            endtime:event.target.value\r\n        })\r\n    }\r\n\r\n    getParticipants=(items)=>{\r\n        this.setState({\r\n            participants:items\r\n        })\r\n    }\r\n\r\n    getPollDetails=()=>{\r\n        if(this.state.username.length>0&&\r\n            this.state.pollname.length>0&&\r\n            this.state.participants.length>0&&\r\n            this.state.maxvotes.length>0&&\r\n            this.state.endtime.length>0\r\n            )\r\n        {\r\n            fetch('https://guarded-plains-75396.herokuapp.com/create',{\r\n                method:'post',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    username:this.state.username,\r\n                    pollname:this.state.pollname,\r\n                    participants:this.state.participants,\r\n                    maxvotes:this.state.maxvotes,\r\n                    endtime:this.state.endtime\r\n                })\r\n            })\r\n            .then(response=>response.json())\r\n            .then(data=>{\r\n                this.setState({\r\n                    route:'Created',\r\n                    ack:data\r\n                })\r\n            })\r\n            .catch(err=>{\r\n                \r\n                this.setState({\r\n                    error:true\r\n                })\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                error:true\r\n            })\r\n        }\r\n    }\r\n\r\n    changeErrstatus=()=>{\r\n        this.setState({\r\n            error:false\r\n        })\r\n    }\r\n\r\n    keypresshandler=(event)=>{\r\n        if(event.which===13){\r\n            this.getPollDetails()\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        let msg,msg1\r\n        if(this.state.error===true){\r\n            msg1=<div><Error changeErrstatus={this.changeErrstatus} /></div>\r\n        }\r\n        if(this.state.route===\"CreatePoll\")\r\n            msg=<div className=\"Createpoll\">\r\n                {msg1}\r\n                <p>Enter Username(*) : </p>\r\n                <input type=\"text\" onChange={this.updateusername} autoFocus />\r\n                <p>Enter the Poll name(*) : </p>\r\n                <input type=\"text\" onChange={this.updatepollname} />\r\n                <Participants getParticipants={this.getParticipants} />\r\n                <p>Enter how many votes one can apply(*) : </p>\r\n                <div><input type=\"text\" onChange={this.updateMaxVotes} /></div>\r\n                <p>End After (in Minutes)(*) : </p>\r\n                <div><input type=\"text\" onChange={this.updateEndtime} onKeyPress={this.keypresshandler} /></div>\r\n                <div><button onClick={this.getPollDetails}>Create a Poll!!!</button></div>\r\n            </div>\r\n        \r\n        if(this.state.route===\"Created\")\r\n            msg=<div>\r\n                <Created Pollcreated={this.state.ack} />\r\n                </div>\r\n        \r\n\r\n        return(\r\n            <div style={{\"display\":\"flex\",\"justifyContent\":\"center\",\"textAlign\":\"center\"}}>\r\n            {msg}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Createpoll;","import React from 'react'\r\nimport Error from '../Error/Error'\r\nimport './ReadyToVote.css'\r\n\r\nclass ReadyToVote extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            obj:this.props.pollDetails,\r\n            err:false,\r\n            arr:new Array(this.props.pollDetails.participants.length).fill(0)\r\n        }\r\n    }\r\n\r\n    dformat=(time)=>{\r\n        let d = new Date(time)\r\n        return d+\"\"\r\n    }\r\n\r\n    changeUservotes=(i,event)=>{\r\n        let temp = this.state.arr\r\n        temp[i]=(Number)(event.target.value)\r\n        this.setState({\r\n            arr:temp\r\n        })\r\n    }\r\n\r\n    submitDetails=()=>{\r\n        let totalvotes = 0\r\n        this.state.arr.map(value=>{\r\n            totalvotes += (Number)(value)\r\n            return 0\r\n        })\r\n        if(totalvotes===(Number)(this.state.obj.maxvotes)){\r\n            let temp = this.state.obj\r\n            let temparr = this.state.arr\r\n            temp.participants.map((user,i)=>{\r\n                user.votes=(Number)(temparr[i])\r\n                return 0;\r\n            })\r\n\r\n            fetch(\"https://guarded-plains-75396.herokuapp.com/vote/votesubmit\",{\r\n            method:\"post\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify(this.state.obj)\r\n            })\r\n            .then(Response=>{\r\n                alert(\"successfully updated\")\r\n                window.location.reload()\r\n            })\r\n            .catch(err=>{\r\n                this.setState({\r\n                    error:true\r\n                })\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                error:true\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    changeErrstatus=()=>{\r\n        this.setState({\r\n            error:false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let msg\r\n        if(this.state.error===true){\r\n            msg=<div><b><Error changeErrstatus={this.changeErrstatus} message={\"you must apply exactly maximum votes\"} /></b></div>\r\n        }\r\n        let users\r\n        let pollid = this.state.obj._id\r\n        let {username,pollname,maxvotes,endtime} = this.state.obj\r\n        if(typeof(this.state.obj.participants)===\"object\"){\r\n            let temp = this.state.arr\r\n            users=this.state.obj.participants.map((user,i)=>{\r\n                return <div key={i} >\r\n                    <span><p style={{\"display\":\"inline\"}}>Participant #{i} :</p> <b>{user.participant}</b></span>\r\n                    <input type = \"range\" min=\"0\" \r\n                    max={maxvotes} \r\n                    value={temp[i]} \r\n                    onInput={(event)=>this.changeUservotes(i,event)}\r\n                    readOnly\r\n                    className=\"slider\"\r\n                     />\r\n                    <input type = \"text\" value={temp[i]}\r\n                    onChange={(event)=>this.changeUservotes(i,event)}\r\n                     />\r\n                </div>\r\n            })\r\n        }\r\n        return(\r\n            <div className=\"ReadyToVote\">\r\n                {msg}\r\n                <p><b>Poll id :</b> {pollid}</p>\r\n                <p><b>Username :</b> {username}</p>\r\n                <p><b>Pollname :</b> {pollname}</p>\r\n                <p><b>Maximum votes allowed :</b> {maxvotes}</p>\r\n                <p><b className=\"timeformat\">Voting ends in :</b> {this.dformat(endtime)}</p>\r\n                {users}\r\n                <button onClick={this.submitDetails}>Click here to vote!!!</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReadyToVote;","import React,{Component} from 'react'\r\nimport './Pollresults.css'\r\n\r\nclass Pollresults extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            data:this.props.Polldetails\r\n        }\r\n    }\r\n\r\n    dformat=(time)=>{\r\n        let d = new Date(time)\r\n        return d+\"\"\r\n    }\r\n\r\n\r\n    render(){\r\n        let status = \"\"\r\n        let users = []\r\n        let pollid = this.state.data._id\r\n        let {username,pollname,participants,maxvotes,endtime,str} = this.state.data\r\n        if(typeof(str)!=\"undefined\"&&this.props.status===\"\"){\r\n            status = str\r\n        }\r\n        participants.sort((a,b)=>b.votes-a.votes)\r\n        users = participants.map((user,i)=>{\r\n            return <p key={i} className=\"participants\"><span className=\"voteshandler\"><b>#{i+1} :</b> {user.participant}</span> <b style={{\"marginLeft\":\"10px\"}}>Votes Received</b> : {user.votes}</p>\r\n        })\r\n        return(\r\n            <div className=\"Pollresults\">\r\n                <p><b>{status}</b></p>\r\n                <p><b>Poll id :</b> {pollid}</p>\r\n                <p><b>Username :</b> {username}</p>\r\n                <p><b>Pollname :</b> {pollname}</p>\r\n                <p><b>Maximum votes allowed :</b> {maxvotes}</p>\r\n                <p><b className=\"timeformat\">Voting ends in :</b> {this.dformat(endtime)}</p>\r\n                <p className=\"participants\"><b>Standings : </b></p>\r\n                {users}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pollresults","import React from 'react'\r\nimport './SearchByname.css'\r\n\r\nclass SearchByname extends React.Component{\r\n\r\n    dformat=(time)=>{\r\n        let d = new Date(time)\r\n        return d+\"\"\r\n    }\r\n\r\n\r\n    render(){\r\n        let list = this.props.listofpolls\r\n        let polls\r\n        if(list.length>0){\r\n            polls = list.map((poll,i)=>{\r\n                let participants = poll.participants.map((data,j)=>{\r\n                    return <p key={j}><b>Participant #{j+1}</b> : {data.participant}</p>\r\n                })\r\n                return <div key={i} className=\"participants\">\r\n                    <div>\r\n                        <p><b>Poll id : </b>{poll._id}</p>\r\n                        <p><b>Username : </b>{poll.username}</p>\r\n                        <p><b>Pollname : </b>{poll.pollname}</p>\r\n                        <p><b>No of participants : </b>{participants.length}</p>\r\n                        {participants}\r\n                        <p><b>Maxvotes : </b>{poll.maxvotes}</p>\r\n                        <p><b className=\"timeformat\">Endtime : </b>{this.dformat(poll.endtime)}</p>\r\n                    </div>\r\n                    <div style={{\"display\":\"flex\",\"alignItems\":\"center\",\"borderLeft\":\"1px solid black\"}}>\r\n                        <button \r\n                        onClick={()=>this.props.onepollHandler(poll.username,poll._id)}\r\n                        style={{\"margin\":\"0\"}}>Click here!</button>\r\n                    </div>\r\n                </div>\r\n            })\r\n        }\r\n        else{\r\n            polls=<p><b>No record found</b></p>\r\n        }\r\n        return(\r\n            <div>\r\n                <p><b style={{\"color\":\"purple\"}}>List of Polls available : (Type someting in the name textbox)</b></p>\r\n                <div className=\"SearchByname\">\r\n                    {polls}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchByname","import React,{ Component } from \"react\";\r\nimport ReadyTovote from '../ReadyToVote/ReadyToVote'\r\nimport Pollresults from '../Pollresults/Pollresults'\r\nimport SearchByname from '../SearchByname/SearchByname'\r\nimport Error from '../Error/Error'\r\nimport './VotePoll.css'\r\n\r\nclass VotePoll extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            username:\"\",\r\n            name:\"\",\r\n            pollid:\"\",\r\n            ack:{},\r\n            route:\"VotePoll\",\r\n            searchbynameresult:[],\r\n            error:false,\r\n            searchBynameroute:\"\"\r\n        }\r\n    }\r\n\r\n    updatename=(event)=>{\r\n        this.setState({\r\n            name:event.target.value\r\n        })\r\n    }\r\n\r\n    updateUsername=(event)=>{\r\n        this.setState({\r\n            username:event.target.value\r\n        })\r\n    }\r\n\r\n    updatePollid=(event)=>{\r\n        this.setState({\r\n            pollid:event.target.value\r\n        })\r\n    }\r\n\r\n    submitDetails=()=>{\r\n        if(this.state.username.length>0&&this.state.pollid.length>0){\r\n            fetch('https://guarded-plains-75396.herokuapp.com/vote',{\r\n                method:'post',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    username:this.state.username,\r\n                    pollid:this.state.pollid\r\n                })\r\n            })\r\n            .then(response=>response.json())\r\n            .then(data=>{\r\n                if(typeof(data.str)==\"undefined\"){\r\n                    this.setState({\r\n                        ack:data,\r\n                        route:\"ReadyToVote\"\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        ack:data,\r\n                        route:\"Pollresults\"\r\n                    })\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                this.setState({\r\n                    error:true\r\n                })\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                error:true\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    searchByname=()=>{\r\n        this.setState({\r\n            searchBynameroute:\"searchbyname\"\r\n        })\r\n        if(this.state.username.length>0&&this.state.name.length>0){\r\n            fetch('https://guarded-plains-75396.herokuapp.com/searchbyname',{\r\n                method:'post',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    name:this.state.name\r\n                })\r\n            })\r\n            .then(response=>response.json())\r\n            .then(data=>{\r\n                this.setState({\r\n                    searchbynameresult:data\r\n                })\r\n            })\r\n            .catch(err=>{\r\n                this.setState({\r\n                    error:true\r\n                })\r\n            })\r\n        }\r\n        else{\r\n                this.setState({\r\n                    error:true\r\n                })\r\n        }\r\n    }\r\n\r\n    onepollHandler=(uname,id)=>{\r\n        fetch('https://guarded-plains-75396.herokuapp.com/vote',{\r\n            method:'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                username:this.state.username,\r\n                pollid:id\r\n            })\r\n        })\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if(typeof(data.str)==\"undefined\"){\r\n                this.setState({\r\n                    ack:data,\r\n                    route:\"ReadyToVote\"\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    ack:data,\r\n                    route:\"Pollresults\"\r\n                })\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            this.setState({\r\n                error:true\r\n            })\r\n        })\r\n    }\r\n\r\n    changeErrstatus=()=>{\r\n        this.setState({\r\n            error:false\r\n        })\r\n    }\r\n\r\n    updatenamekeyhandler=(event)=>{\r\n        if(event.which===13){\r\n            this.searchByname()\r\n        }\r\n    }\r\n\r\n    updatepollidkeyhandler=(event)=>{\r\n        if(event.which===13){\r\n            this.submitDetails()\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        let msg2\r\n        if(this.state.searchBynameroute===\"searchbyname\"){\r\n            msg2=<div><SearchByname listofpolls={this.state.searchbynameresult} onepollHandler={this.onepollHandler} /></div>\r\n        }\r\n        let msg,msg1\r\n        if(this.state.error===true){\r\n            msg1=<div><Error changeErrstatus={this.changeErrstatus} /></div>\r\n        }\r\n        if(this.state.route===\"VotePoll\"){\r\n            msg=<div>\r\n                    {msg1}\r\n                    <p>Enter Your name(*) : </p>\r\n                    <input type=\"text\" onChange={this.updateUsername} autoFocus />\r\n                    <p>Enter Name(Search by name who created) : </p>\r\n                    <input type=\"text\" onChange={this.updatename} onKeyPress={this.updatenamekeyhandler} /><br />\r\n                    <button onClick={this.searchByname}>Search by name Click to vote!!!</button>\r\n                    <p>Enter Poll id (Enter a valid pollid or try searching for name) : </p>\r\n                    <input type=\"text\" onChange={this.updatePollid} onKeyPress={this.updatepollidkeyhandler} /><br />\r\n                    <button onClick={this.submitDetails}>Click to vote!!!</button>\r\n                    {msg2}\r\n                </div>\r\n        }\r\n        if(this.state.route===\"ReadyToVote\"){\r\n            msg=<div>{msg1}<ReadyTovote pollDetails={this.state.ack} /></div>\r\n        }\r\n        if(this.state.route === 'Pollresults'){\r\n            msg = <div>{msg1}<Pollresults Polldetails={this.state.ack} status={\"\"} /></div>\r\n        }\r\n        return(\r\n            <div style={{\"display\":\"flex\",\"justifyContent\":\"center\",\"textAlign\":\"center\"}} className=\"VotePoll\">\r\n                {msg}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VotePoll","import React,{Component} from 'react'\r\nimport Pollresults from '../Pollresults/Pollresults'\r\nimport SearchByname from '../SearchByname/SearchByname'\r\nimport Error from '../Error/Error'\r\nimport \"./Checkresults.css\"\r\n\r\nclass Checkresults extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            name:\"\",\r\n            pollid:\"\",\r\n            ack:{},\r\n            route:\"Checkresults\",\r\n            searchbynameresult:[],\r\n            error:false,\r\n            searchBynameroute:\"\"\r\n        }\r\n    }\r\n\r\n    updatename=(event)=>{\r\n        this.setState({\r\n            name:event.target.value\r\n        })\r\n    }\r\n\r\n    updateUsername=(event)=>{\r\n        this.setState({\r\n            username:event.target.value\r\n        })\r\n    }\r\n\r\n    updatePollid=(event)=>{\r\n        this.setState({\r\n            pollid:event.target.value\r\n        })\r\n    }\r\n\r\n    submitDetails=()=>{\r\n        if(this.state.pollid.length>0){\r\n            fetch('https://guarded-plains-75396.herokuapp.com/result',{\r\n                method:'post',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    username:this.state.username,\r\n                    pollid:this.state.pollid\r\n                })\r\n            })\r\n            .then(response=>response.json())\r\n            .then(data=>{\r\n                this.setState({\r\n                    ack:data,\r\n                    route:\"Pollresults\"\r\n                })\r\n            })\r\n            .catch(err=>{\r\n                this.setState({\r\n                    error:true\r\n                })\r\n            })\r\n        }\r\n        else{\r\n            alert(\"Please fill details\")\r\n        }\r\n        \r\n    }\r\n\r\n    searchByname=()=>{\r\n        this.setState({\r\n            searchBynameroute:\"searchbyname\"\r\n        })\r\n        if(this.state.name.length>0){\r\n            fetch('https://guarded-plains-75396.herokuapp.com/searchbyname',{\r\n                method:'post',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    name:this.state.name\r\n                })\r\n            })\r\n            .then(response=>response.json())\r\n            .then(data=>{\r\n                this.setState({\r\n                    searchbynameresult:data\r\n                })\r\n            })\r\n            .catch(err=>{\r\n                this.setState({\r\n                    error:true\r\n                })\r\n            })\r\n\r\n        }\r\n        else{\r\n            alert(\"Please fill details\")\r\n        }\r\n    }\r\n\r\n    onepollHandler=(uname,id)=>{\r\n        fetch('https://guarded-plains-75396.herokuapp.com/vote',{\r\n            method:'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                username:uname,\r\n                pollid:id\r\n            })\r\n        })\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            if(typeof(data.str)==\"undefined\"){\r\n                this.setState({\r\n                    ack:data,\r\n                    route:\"ReadyToVote\"\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    ack:data,\r\n                    route:\"Pollresults\"\r\n                })\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            this.setState({\r\n                error:true\r\n            })\r\n        })\r\n    }\r\n    changeErrstatus=()=>{\r\n        this.setState({\r\n            error:false\r\n        })\r\n    }\r\n    updatenamekeyhandler=(event)=>{\r\n        if(event.which===13){\r\n            this.searchByname()\r\n        }\r\n    }\r\n\r\n    updatePollidkeyhandler=(event)=>{\r\n        if(event.which===13){\r\n            this.submitDetails()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let msg2\r\n        if(this.state.searchBynameroute===\"searchbyname\"){\r\n            msg2=<div><SearchByname listofpolls={this.state.searchbynameresult} onepollHandler={this.onepollHandler} /></div>\r\n        }\r\n        let msg,msg1\r\n        if(this.state.error===true){\r\n            msg1=<div><Error changeErrstatus={this.changeErrstatus} /></div>\r\n        }\r\n        if(this.state.route===\"Checkresults\"){\r\n            msg = <div>\r\n                    {msg1}\r\n                    <p>Enter name(Search by name) : </p>\r\n                    <input type=\"text\" onChange={this.updatename} autoFocus onKeyPress={this.updatenamekeyhandler} /><br />\r\n                    <button onClick={this.searchByname}>Search by name Click to vote!!!</button>\r\n                    <p>Enter Poll id (Enter a valid pollid or try searching for name) : </p>\r\n                    <input type=\"text\" onChange={this.updatePollid} onKeyPress={this.updatePollidkeyhandler} /><br />\r\n                    <button onClick={this.submitDetails}>Check Results!!!</button>\r\n                    {msg2}\r\n                </div>\r\n        }\r\n        if(this.state.route === 'Pollresults'){\r\n            msg = <div><Pollresults Polldetails={this.state.ack} status={\"result\"} /></div>\r\n        }\r\n        return(\r\n            <div style={{\"display\":\"flex\",\"justifyContent\":\"center\",\"textAlign\":\"center\"}} className=\"Checkresults\">\r\n                {msg}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Checkresults","import React from 'react';\nimport './App.css';\nimport 'tachyons'\nimport Navigation from './components/Navigation/Navigation'\nimport HomePage from './components/HomePage/HomePage'\nimport Createpoll from './components/Createpoll/Createpoll'\nimport VotePoll from './components/VotePoll/VotePoll';\nimport Checkresults from './components/Checkresults/Checkresults'\nimport Tree from './Treepic.png'\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state={\n      prev:\"\",\n      next:\"\",\n      route:\"Home\"\n    }\n  }\n\n  clickPrev=()=>{\n    this.setState({\n      next:this.state.route,\n      route:this.state.prev\n    })\n  }\n\n  clickNext=()=>{\n    this.setState({\n      prev:this.state.route,\n      route:this.state.next\n    })\n  }\n\n  createpollrouteChange=()=>{\n    this.setState({\n      route:\"Createpoll\",\n      prev:\"Home\"\n    })\n  }\n\n  votepollrouteChange=()=>{\n    this.setState({\n      route:\"Votepoll\",\n      prev:\"Home\"\n    })\n  }\n\n  resultrouteChange=()=>{\n    this.setState({\n      route:\"Result\",\n      prev:\"Home\"\n    })\n  }\n\n  render(){\n    let msg;\n    if(this.state.route===\"Home\"){\n      msg=<div>\n        <HomePage\n       createpollrouteChange={this.createpollrouteChange}\n        votepollrouteChange={this.votepollrouteChange}\n        resultrouteChange={this.resultrouteChange}\n        /></div>\n    }\n    if(this.state.route===\"Createpoll\"){\n      msg=<div><Createpoll /></div>\n    }\n    if(this.state.route===\"Votepoll\"){\n      msg=<div><VotePoll /></div>\n    }\n    if(this.state.route===\"Result\"){\n      msg=<div><Checkresults /></div>\n    }\n    return (\n      <div>\n        <img src={Tree} alt=\"Tree Background\" />\n      <div style={{\"display\":\"flex\",\"justifyContent\":\"center\"}}>\n        <div className=\"Homepage\" style={{\"textAlign\":\"center\"}}>\n        <p style={{\"color\":\"#FBF1A9\"}} className=\"h1\">SB Voter</p>\n        <div \n        className=\"bg-light-red\" \n        style={{\"padding\":\"30px\",\"border\":\"2px solid purple\",\"borderRadius\":\"20px\",\"boxShadow\":\"5px 5px 10px black\",\"marginTop\":\"50px\"}} >\n          <Navigation clickPrev={this.clickPrev} clickNext={this.clickNext} />\n          {msg}\n        </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}